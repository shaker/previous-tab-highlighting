var tabs = require("sdk/tabs");var window_utils = require("sdk/window/utils");var tabs_utils = require("sdk/tabs/utils");var windows = require("sdk/windows").browserWindows;var { viewFor } = require("sdk/view/core");require("sdk/simple-prefs").on("", onPrefChange);var style_name;var style_value;var list = {};setPref();initWindows();function highlightPrevTab() {    var window = window_utils.getMostRecentBrowserWindow();    var current_window = list[window_utils.getInnerId(window)];        if (current_window == undefined) {        addWindow(window);        current_window = list[window_utils.getInnerId(window)];    }    var active_tab = mGetActiveTabByWindow(window);    if (active_tab == current_window.lasttab) {        return;    } else {        if (current_window.prevtab != undefined) {            current_window.prevtab.style.setProperty(style_name, '', 'important');        }        current_window.prevtab = current_window.lasttab;        current_window.prevtab.style.setProperty(style_name, style_value, 'important');        current_window.lasttab = mGetActiveTabByWindow(window);    }}function mGetActiveTabByWindow(window) {    var tab = tabs_utils.getActiveTab(window);    return tab;}function onPrefChange() {    prev_tab.style.setProperty(style_name, '', 'important');    setPref();}function initWindows() {    for (let window of window_utils.windows(null, {includePrivate: true})) {        if (list[window_utils.getInnerId(window)] == undefined) {            list[window_utils.getInnerId(window)] = {                "prevtab": mGetActiveTabByWindow(window),                "lasttab": mGetActiveTabByWindow(window)            };        }    }}function addWindow(window) {    var windowDOM = viewFor(window);    list[window_utils.getInnerId(windowDOM)] = {        prevtab: mGetActiveTabByWindow(windowDOM),        lasttab: mGetActiveTabByWindow(windowDOM)    };}function rmWindow(window) {    var windowDOM = viewFor(window);    delete list[window_utils.getInnerId(windowDOM)];}function setPref() {    var selected = require("sdk/simple-prefs").prefs.style_radio;    switch (selected) {        case "bold":            style_name = "font-weight";            style_value = "bold";            break;        case "opacity":            style_name = "opacity";            style_value = "0.5";            break;        case "custom":            style_name = require("sdk/simple-prefs").prefs.css_name;            style_value = require("sdk/simple-prefs").prefs.css_value;            break;        default:            style_name = "font-weight";            style_value = "bold";    }}windows.on('open', addWindow);windows.on('close', rmWindow);tabs.on('activate', highlightPrevTab);